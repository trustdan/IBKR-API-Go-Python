name: Build TraderAdmin Installer

on:
  push:
    branches: [ main, master ]
    paths:
      - 'trader-admin/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'trader-admin/**'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
    - name: Configure Git
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: true

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.8.0

    - name: Install NSIS
      run: |
        choco install nsis -y
        echo "Adding NSIS to PATH"
        echo "$env:ProgramFiles\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Install Frontend Dependencies
      working-directory: trader-admin/TraderAdmin/frontend
      run: npm ci

    - name: Get Wails version
      run: wails version

    - name: Build TraderAdmin App
      working-directory: trader-admin/TraderAdmin
      run: wails build -trimpath -o TraderAdmin.exe

    - name: Create LICENSE.txt if not exists
      working-directory: trader-admin
      run: |
        if (-not (Test-Path LICENSE.txt)) {
          echo "Creating blank LICENSE.txt file..."
          echo "TraderAdmin - IBKR Auto Trader" > LICENSE.txt
          echo "MIT License" >> LICENSE.txt
        }

    - name: Build NSIS Installer
      working-directory: trader-admin
      run: |
        makensis TraderAdmin-Installer.nsi
        if ($LASTEXITCODE -ne 0) {
          echo "Error building NSIS installer."
          exit 1
        }

    - name: Get Version Number
      id: get-version
      working-directory: trader-admin
      run: |
        $version = (Select-String -Path "TraderAdmin-Installer.nsi" -Pattern 'VERSION "(.*)"').Matches.Groups[1].Value
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: TraderAdmin-Setup-${{ steps.get-version.outputs.version }}
        path: trader-admin/TraderAdmin-Setup-*.exe
        retention-days: 30

    - name: Create GitHub Release (on tag)
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: trader-admin/TraderAdmin-Setup-*.exe
        name: TraderAdmin ${{ steps.get-version.outputs.version }}
        body: |
          TraderAdmin ${{ steps.get-version.outputs.version }} Installer Release

          ## System Requirements
          - Windows 10 or newer
          - Docker Desktop with Kubernetes enabled
          - Interactive Brokers Trader Workstation or Gateway
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
