apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        monitor: 'vertical-spread-monitor'

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Scrape Prometheus itself
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']

      # Go Scanner Service
      - job_name: 'go-scanner'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - vertical-spread-production
            - vertical-spread-staging
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: vertical-spread-go
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: service

      # Python Orchestrator
      - job_name: 'python-orchestrator'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - vertical-spread-production
            - vertical-spread-staging
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: vertical-spread-python
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: service

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes Cadvisor
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  rules.yml: |-
    groups:
    - name: vertical-spread-alerts
      rules:
      # Go Scanner High Error Rate
      - alert: GoScannerHighErrorRate
        expr: rate(scanner_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate in Go Scanner"
          description: "Scanner error rate is {{ $value }} errors per second for the last 5 minutes"

      # Python Orchestrator High Error Rate
      - alert: PythonOrchestratorHighErrorRate
        expr: rate(python_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate in Python Orchestrator"
          description: "Python error rate is {{ $value }} errors per second for the last 5 minutes"

      # Scanner Performance Alert
      - alert: ScannerLowPerformance
        expr: scanner_symbols_per_second < 20
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Scanner performance degraded"
          description: "Scanner is processing only {{ $value }} symbols per second (below threshold of 20)"

      # Memory Usage Alert
      - alert: HighMemoryUsage
        expr: container_memory_usage_bytes{namespace=~"vertical-spread-.+"} / container_spec_memory_limit_bytes{namespace=~"vertical-spread-.+"} > 0.85
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Container {{ $labels.pod }} in {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its memory limit"

      # CPU Usage Alert
      - alert: HighCpuUsage
        expr: rate(container_cpu_usage_seconds_total{namespace=~"vertical-spread-.+"}[5m]) / container_spec_cpu_quota{namespace=~"vertical-spread-.+"} > 0.85
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "Container {{ $labels.pod }} in {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its CPU limit"

